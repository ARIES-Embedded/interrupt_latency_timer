--
-- Interrupt Latency Timer
--
-- An APB slave device, capable to generate an interrupt request
-- signal and to count clock cycles till the request is acknowledged
-- by an ISR and/or received by an application program
--
-- Copyright (c) 2021 ARIES Embedded GmbH
--

library ieee;
use ieee.std_logic_1164.all;

use work.ilt_pkg.all;

entity ilt is
  generic (
    PADDR_WIDTH : integer := 32;
    PDATA_WIDTH : integer := 32;
    CORE_ID : std_logic_vector(31 downto 0) := x"%GIT_ID%"
  );
  port (
    pclk    : in  std_logic;
    presetn : in  std_logic;
    paddr   : in  std_logic_vector(PADDR_WIDTH-1 downto 0);
    pselx   : in  std_logic;
    penable : in  std_logic;
    pwrite  : in  std_logic;
    pwdata  : in  std_logic_vector(PDATA_WIDTH-1 downto 0);
    pready  : out std_logic;
    prdata  : out std_logic_vector(PDATA_WIDTH-1 downto 0);
    pslverr : out std_logic;
    irq     : out std_logic;
    test_a  : out std_logic;
    test_b  : out std_logic);
end entity ilt;

architecture struct of ilt is

  signal apb_o_dat : std_logic_vector(PDATA_WIDTH-1 downto 0);

  signal gen_mode : std_logic_vector(1 downto 0) := "00";
  signal enable   : std_logic := '0';

  signal frt_cnt_l : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal frt_cnt_h : std_logic_vector(PDATA_WIDTH-1 downto 0);

  signal r_d0 : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal r_d1 : std_logic_vector(PDATA_WIDTH-1 downto 0);  -- RFU
  signal r_d2 : std_logic_vector(PDATA_WIDTH-1 downto 0);  -- RFU
  signal r_d3 : std_logic_vector(PDATA_WIDTH-1 downto 0);  -- RFU

  signal latch0 : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal latch1 : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal latch2 : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal latch3 : std_logic_vector(PDATA_WIDTH-1 downto 0);

  signal l_busy : std_logic_vector(3 downto 0);
  signal l_ovfl : std_logic_vector(3 downto 0);

  signal ack0_mcnt : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal ack3_mcnt : std_logic_vector(PDATA_WIDTH-1 downto 0);

  type ilt_state_t is (ILT_IDLE_ST, ILT_DELAY_ST, ILT_ACTIVE_ST, ILT_ACK3_ST);
  signal ilt_state : ilt_state_t := ILT_IDLE_ST;
  signal ilt_next : ilt_state_t;

  signal d_cnt : std_logic_vector(PDATA_WIDTH-1 downto 0);
  signal l_cnt : std_logic_vector(PDATA_WIDTH-1 downto 0);

  signal rstn : std_logic;

begin

  irq <= '0';
  test_a <= '0';
  test_b <= '0';

  u0: component ilt_apb
    generic map (
      PADDR_WIDTH => PADDR_WIDTH,
      PDATA_WIDTH => PDATA_WIDTH)
    port map (
      pclk => pclk,
      presetn => presetn,
      paddr => paddr,
      pselx => pselx,
      penable => penable,
      pwrite => pwrite,
      pwdata => pwdata,
      pready => pready,
      prdata => prdata,
      pslverr => pslverr,

      core_id => CORE_ID);

end architecture struct;
